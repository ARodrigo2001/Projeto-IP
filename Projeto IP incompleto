#Projeto IP
def menu_principal():
    return print('''
----- MENU PRINCIPAL -----

1 - Dados de Professores
2 - Dados de Alunos
3 - Dados de Disciplinas
4 - Dados de Turmas
0 - Sair
''')
#------------------------
      #FUNÇÕES MENU

def menu_professor():           
    return print('''
----- MENU -----

* PROFESSORES *

1 - Adiciona
2 - Atualiza
3 - Consulta
4 - Deleta
0 - Menu Principal
''')
#------------------------
def menu_aluno():                           
    return print('''
----- MENU -----

* ALUNOS *

1 - Adiciona
2 - Atualiza
3 - Consulta
4 - Deleta
0 - Menu Principal
''')
#------------------------
def menu_disciplina():                           
    return print('''
----- MENU -----

* DISCIPLINAS *

1 - Adiciona
2 - Atualiza
3 - Consulta
4 - Deleta
0 - Menu Principal
''')
#-----------------------
def menu_turma():                           
    return print('''
----- MENU -----

* TURMAS *

1 - Adiciona
2 - Atualiza
3 - Consulta
4 - Deleta
0 - Menu Principal
''')
#--------------------------------------------------------------------------------------------
                                        #FUNÇÕES INPUT
def pedir_nome():                           
    return(input('Digite o nome:'))
    
def pedir_CPF():                            
    return(input('Digite o CPF(apenas dígitos):'))

def pedir_departamento():                   
    return(input('Digite o departamento:'))

def pedir_codigo():
    return(input('Digite o código da disciplina:'))

def pedir_codturma():
    return(input('Digite o código da turma:'))

def pedir_periodo():
    return(input('Digite o período(dígito):'))
#--------------------------------------------------------------------------------------------
while True:
    menu_principal()
    consulta = int(input('Quais dados gostaria de alterar?'))
    if consulta == 0:
        break
    if consulta == 1:
        professores = []
        menu_professor()
        c = 0
                                  #FUNÇÃO CRIAR CADASTRO PROFESSOR
        def create():                                                                                                       
            global professores
            global c
            print('---- Insira os dados a serem cadastrados ----')
            nome_professor = pedir_nome()
            cpf_professor = pedir_CPF()
            while cpf_professor.isdigit() is False:
                cpf_professor = pedir_CPF()
            departamento_professor = pedir_departamento()
            if len(professores) == 0:
                arquivo_p = open('professores.txt', 'a')
                arquivo_p.write('%s / %s / %s\n' %(nome_professor, cpf_professor, departamento_professor))
                arquivo_p.close()
                professores.append([nome_professor, cpf_professor, departamento_professor])
                print('---- Cadastro Realizado ----')
            else:
                for p, e in enumerate(professores):
                    if e[1] == cpf_professor:
                        print('---- Professor já cadastrado ----')
                        c = 1
                if c != 1:
                    arquivo_p = open('professores.txt', 'a')
                    arquivo_p.write('%s / %s / %s\n' %(nome_professor, cpf_professor, departamento_professor))
                    arquivo_p.close()
                    professores.append([nome_professor, cpf_professor, departamento_professor])
                    print('---- Cadastro Realizado ----')
                
                c = 0
#--------------------------------------------------------------------------------------------
                                 #FUNÇÃO ATUALIZAR CADASTRO PROFESSOR
        def update():                                                                                                   
            global professores
            global c
            print('---- Insira o CPF do cadastro a ser atualizado ----')
            cpf_professor = pedir_CPF()
            while cpf_professor.isdigit() is False:
                cpf_professor = pedir_CPF()
            for p, e in enumerate(professores):
                if e[1] == cpf_professor:
                    print('---- Professor encontrado ----')
                    novo_nome = input('Digite o novo nome:')
                    novo_cpf = input('Digite o novo CPF:')
                    while novo_cpf.isdigit() is False:
                        novo_cpf = pedir_CPF()
                    novo_departamento = input('Digite o novo departamento:')
                    professores[p][0] = novo_nome
                    professores[p][1] = novo_cpf
                    professores[p][2] = novo_departamento
                    arquivo_p = open('professores.txt', 'a')
                    arquivo_p.write('%s / %s / %s\n' %(novo_nome, novo_cpf, novo_departamento))
                    arquivo_p.close()
                    print('---- Cadastro Atualizado ----')
                    c = 1
                    if c != 1:
                        print('---- Professor ainda não encontrado... ----')
                    
                c = 0
        
                
#-------------------------------------------------------------------------------------------
                                #FUNÇÃO DELETAR CADASTRO PROFESSOR
        def delete():                                                                                                   
            global professores
            print('---- Insira o CPF do cadastro a ser deletado ----')
            cpf_professor = pedir_CPF()
            while cpf_professor.isdigit() is False:
                cpf_professor = pedir_CPF()
            c = False
            for p, e in enumerate(professores):
            
                if e[1] == cpf_professor:
                    del professores[p]
                    print('---- Cadastro Deletado ----')
                    c = True
            
            if c == False:
                print('---- Usuário não encontrado ----')
#--------------------------------------------------------------------------------------------
                                        #OPERADOR PROFESSORES
    
        while True:
            v = int(input('Digite a operação para PROFESSORES:'))
            if v == 0:
                break
            elif v == 1:
                create()
                continue
            elif v == 2:
                update()
                continue
            elif v == 3:
                if len(professores) == 0:
                    print('---- Não há nenhum professor cadastrado ----')
                else:
                    for p, e in enumerate(professores):
                        print('Professor(a): %s    CPF: %s     Departamento: %s' %(e[0], e[1], e[2]))
                    continue
            elif v == 4:
                delete()

#--------------------------------------------------------------------------------------------
                                #FUNÇÃO CRIAR CADASTRO ALUNO
    if consulta == 2:
        alunos = []
        menu_aluno()
        c = 0
        
        def createA():
            global professores
            global c
            print('---- Insira os dados a serem cadastrados ----')
            nome_aluno = pedir_nome()
            cpf_aluno = pedir_CPF()
            while cpf_aluno.isdigit() is False:
                cpf_aluno = pedir_CPF()
            if len(alunos) == 0:
                arquivo_a = open('alunos.txt', 'a')
                arquivo_a.write('%s / %s\n' %(nome_aluno, cpf_aluno))
                arquivo_a.close()
                alunos.append([nome_aluno, cpf_aluno])
                print('---- Cadastro Realizado ----')
            else:
                for p, e in enumerate(alunos):
                    if e[1] == cpf_aluno:
                        print('---- Aluno já cadastrado ----')
                        c = 1
                if c != 1:
                    arquivo_a = open('alunos.txt', 'a')
                    arquivo_a.write('%s / %s\n' %(nome_aluno, cpf_aluno))
                    arquivo_a.close()
                    alunos.append([nome_aluno, cpf_aluno])
                    print('---- Cadastro Realizado ----')
                
                c = 0
#--------------------------------------------------------------------------------------------
                                        #FUNÇÃO ATUALIZAR CADASTRO ALUNO
        def updateA():
            global alunos
            global c
            print('---- Insira o CPF do cadastro a ser atualizado ----')
            cpf_aluno = pedir_CPF()
            while cpf_aluno.isdigit() is False:
                cpf_aluno = pedir_CPF()
            for p, e in enumerate(alunos):
                if e[1] == cpf_aluno:
                    print('---- Aluno encontrado ----')
                    novo_nome = input('Digite o novo nome:')
                    novo_cpf = input('Digite o novo CPF:')
                    while novo_cpf.isdigit() is False:
                        novo_cpf = pedir_CPF()                    
                    alunos[p][0] = novo_nome
                    alunos[p][1] = novo_cpf
                    print('---- Cadastro Atualizado ----')
                    c = 1
                    if c != 1:
                        print('---- Aluno ainda não encontrado... ----')
                c = 0
#--------------------------------------------------------------------------------------------                    
                                #FUNLÃO DELETAR CADASTRO ALUNO
        def deleteA():                                                                                                   
            global alunos
            print('---- Insira o CPF do cadastro a ser deletado ----')
            cpf_aluno = pedir_CPF()
            while cpf_aluno.isdigit() is False:
                cpf_aluno = pedir_CPF()
            c = False
            for p, e in enumerate(alunos):
            
                if e[1] == cpf_aluno:
                    del alunos[p]
                    print('---- Cadastro Deletado ----')
                    c = True
            
            if c == False:
                print('---- Usuário não encontrado ----')
#--------------------------------------------------------------------------------------------
                                    #OPERADOR ALUNOS
    
        while True:
            v = int(input('Digite a operação para ALUNOS:'))
            if v == 0:
                break
            elif v == 1:
                createA()
                continue
            elif v == 2:
                updateA()
                continue
            elif v == 3:
                if len(alunos) == 0:
                    print('---- Não há nenhum aluno cadastrado ----')
                else:
                    for p, e in enumerate(alunos):
                        print('Aluno(a): %s    CPF: %s' %(e[0], e[1]))
                continue
            elif v == 4:
                deleteA()
#--------------------------------------------------------------------------------------------
                                #FUNÇÃO CRIAR CADASTRO DISCIPLINA
    if consulta == 3:
        disciplina = []
        menu_disciplina()
        c = 0

        def createD():
            global disciplina
            global c
            print('---- Insira os dados a serem cadastrados ----')
            nome = pedir_nome()
            codigo = pedir_codigo()
            if len(disciplina) == 0:
                arquivo_d = open('disciplinas.txt', 'a')
                arquivo_d.write('%s / %s\n' %(nome,codigo))
                arquivo_d.close()
                disciplina.append([nome, codigo])
                print('---- Cadastro Realizado ----')
            else:
                for p, e in enumerate(disciplina):
                    if e[1] == codigo:
                        print('---- Disciplina já cadastrado ----')
                        c = 1
                if c != 1:
                    arquivo_d = open('disciplinas.txt', 'a')
                    arquivo_d.write('%s / %s\n' %(nome,codigo))
                    arquivo_d.close()
                    disciplina.append([nome, codigo])
                    print('---- Cadastro Realizado ----')
                
                c = 0
#--------------------------------------------------------------------------------------------
                                #FUNÇÃO ATUALIZAR CADASTRO DISCIPLINA
        def updateD():                                                                                                   
            global disciplina
            global c
            print('---- Insira os dados a serem atualizados ----')
            codigo = pedir_codigo()
            for p, e in enumerate(disciplina):
                if e[1] == codigo:
                    print('---- Disciplina encontrada ----')
                    novo_nome = input('Digite o novo nome:')
                    novo_codigo = input('Digite o novo código:')
                    disciplina[p][0] = novo_nome
                    disciplina[p][1] = novo_codigo
                    print('---- Cadastro Atualizado ----')
                    c = 1
                    if c == 0:
                        print('---- Disciplina ainda não encontrada... ----')
                c = 0
#--------------------------------------------------------------------------------------------
                                #FUNÇÃO DELETAR CADASTRO DISCIPLINA
        def deleteD():                                                                                                   
            global disciplina
            print('---- Insira o código da disciplina a ser deletada ----')
            codigo = pedir_codigo()
            c = False
            for p, e in enumerate(disciplina):
            
                if e[1] == codigo:
                    del disciplina[p]
                    print('---- Disciplina Deletada ----')
                    c = True
            
            if c == False:
                print('---- Disciplina não encontrada ----')

#--------------------------------------------------------------------------------------------
                                    #OPERADOR DISCIPLINA
        while True:
            v = int(input('Digite a operação para DISCIPLINA:'))
            if v == 0:
                break
            elif v == 1:
                createD()
                continue
            elif v == 2:
                updateD()
                continue
            elif v == 3:
                if len(disciplina) == 0:
                    print('---- Não há nenhuma disciplina cadastrada ----')
                else:
                    for p, e in enumerate(disciplina):
                        print('Disciplina: %s    Código: %s' %(e[0], e[1]))
                continue
            elif v == 4:
                deleteD()
#--------------------------------------------------------------------------------------------
                                #FUNÇÃO CRIAR CADASTRO TURMA
